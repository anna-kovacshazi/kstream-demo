# docker compose -f docker-compose-local.yml up
version: "3.0"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_SERVERS: "zookeeper:22888:23888"
    ports:
      - "2181:2181"

  kafka1:
    image: confluentinc/cp-kafka:6.1.1
    restart: always
    depends_on:
      - zookeeper
    ports:
      # Exposes 29092 for external connections to the broker
      # Use kafka1:9092 for connections internal on the docker network
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      #      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8081"
      KAFKA_JMX_PORT: 9991


    #  schemaregistry:
    #    image: confluentinc/cp-schema-registry:6.1.1
    #    restart: always
    #    depends_on:
    #      - zookeeper
    #    environment:
    #      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
    #      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
    #      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    #    ports:
    #      - 8081:8081
    #

  connect:
    image: confluentinc/cp-kafka-connect:6.1.1
    restart: always
    depends_on:
      - zookeeper
      - kafka1
#      - schemaregistry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka1:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
        #        CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
        #        CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'
        #        CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
        #        CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
      CONNECT_VALUE_CONVERTER_AUTO_REGISTER_SCHEMA: "false"
      CONNECT_VALUE_CONVERTER_USE_LATEST_VERSION: "true"
    volumes:
      - ./plugins:/etc/kafka-connect/jars
      - ./files:/files

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "1080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS=http://connect:8083
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME=connect
  #      - KAFKA_CLUSTERS_0_SCHEMAREGISTRY=http://schemaregistry:8081

  mongodb_container:
    container_name: mongo
    image: candis/mongo-replica-set
    ports:
      - "27017:27017"
      - "27018:27018"
      - "27019:27019"

  start-dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - zookeeper
      - kafka1
      - connect
      #      - schemaregistry
      - kafka-ui
      - mongodb_container
    #    command: zookeeper:2181 kafka1:9092 schemaregistry:8081 kafka-ui:8080
    command: zookeeper:2181 kafka1:9092 connect:8083 kafka-ui:8080 mongodb_container:27017
